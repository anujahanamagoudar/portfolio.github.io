#include <iostream>
#include <queue>
#include <string>
#include <vector>

using namespace std;

struct Application {
    string name;
    int meritScore;
    string applicationTime;

    Application(string n, int m, string t) : name(n), meritScore(m), applicationTime(t) {}

    bool operator<(const Application &other) const {
        return meritScore < other.meritScore;
    }
};

int main() {
    priority_queue<Application> pq;

    int choice;
    do {
        cout << "\nMenu:\n";
        cout << "1. Add application\n";
        cout << "2. Process highest priority application\n";
        cout << "3. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
        case 1: {
            string name, time;
            int score;
            cin.ignore();
            cout << "Enter Applicant Name: ";
            getline(cin, name);
            cout << "Enter Merit Score: ";
            cin >> score;
            cin.ignore();
            cout << "Enter Application Time: ";
            getline(cin, time);
            pq.push(Application(name, score, time));
            cout << "Application added successfully.\n";
            break;
        }
        case 2: {
            if (pq.empty()) {
                cout << "No applications to process.\n";
            } else {
                Application topApp = pq.top();
                pq.pop();
                cout << "Processing Application:\n";
                cout << "Name: " << topApp.name << ", Merit Score: " << topApp.meritScore
                     << ", Application Time: " << topApp.applicationTime << endl;
            }
            break;
        }
        case 3:
            cout << "Exiting program. Goodbye!\n";
            break;
        default:
            cout << "Invalid choice! Please try again.\n";
        }
    } while (choice != 3);

    return 0;
}
